#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/abf298b6-2909-4913-ab71-c4dad24035bc 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool water_override;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

// source for serial mode: https://forum.arduino.cc/t/how-to-choose-serial-port-as-variable/651607/9
HardwareSerial* pin_serial = NULL; // Serial variable 

bool watering = false;


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  // Open pin port to Arduino UNO:
  pin_serial = &Serial1; // pin 13(RX) and 14(TX)
  pin_serial -> begin(9600); // pointer (->) necessary to make it work
  
  pinMode(LED_BUILTIN, OUTPUT);
}

void loop() {
  ArduinoCloud.update();
  //Storage of latest command
  String last_msg;

  if (checkMessage()) {
    last_msg = recieveMessage();
  }

  if (last_msg.substring(0,3) == "smp") {
    // soil moisture update 
    soil_moisture_level =  getInt(last_msg);
    Serial.println(soil_moisture_level);
  
  }
  else if (last_msg.substring(0,3) == "wtd") {
    // watering is done
    watering = false;
    digitalWrite(LED_BUILTIN, LOW);
  }
  
  else if (last_msg.substring(0, 3) == "wll") {
    // water level is low
    water_low = true;
  }
  
  else if (last_msg.substring(0, 3) == "wnl") {
    // water level is not low
    water_low = false;
  }

  
  if (water_override && !watering) {
    digitalWrite(LED_BUILTIN, HIGH);
    watering = true; // flag for if watering is ongoing
    sendMessage("wtr");
  }

  
  delay(1000); 
}


/*
  Since WaterOverride is READ_WRITE variable, onWaterOverrideChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onWaterOverrideChange()  {
  // Add your code here to act upon WaterOverride change
  
  
}

